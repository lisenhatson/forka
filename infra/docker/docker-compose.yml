version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: forka_db
    environment:
      POSTGRES_DB: forka
      POSTGRES_USER: forka
      POSTGRES_PASSWORD: forka123
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - forka-network
    restart: unless-stopped


  # Backend Django
  backend:
    build: 
      context: ../../
      dockerfile: infra/docker/backend.dockerfile
    container_name: forka_backend
    volumes:
      - ../../backend:/app
      - static_files:/app/staticfiles
      - media_files:/app/media
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://forka:forka123@db:5432/forka
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - forka-network
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000

  # Frontend React
  frontend:
    build:
      context: ../../
      dockerfile: infra/docker/frontend.dockerfile
    container_name: forka_frontend
    volumes:
      - ../../frontend:/app
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - REACT_APP_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - forka-network
    restart: unless-stopped

  # Apache Reverse Proxy
  apache:
    build:
      context: ../../
      dockerfile: infra/docker/apache.dockerfile
    container_name: forka_apache
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_files:/var/www/static
      - media_files:/var/www/media
      - ./ssl:/etc/apache2/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - forka-network
    restart: unless-stopped

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: forka_backup
    volumes:
      - ../../backup:/backup
      - postgres_data:/var/lib/postgresql/data:ro
    environment:
      - PGPASSWORD=forka123
    networks:
      - forka-network
    entrypoint: /backup/db_backup.sh
    profiles: ["backup"]  # Only run when explicitly called

volumes:
  postgres_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local

networks:
  forka-network:
    driver: bridge